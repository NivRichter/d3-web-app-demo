{"version":3,"sources":["Graph.js","Autocomplete.jsx","App.js","serviceWorker.js","index.js"],"names":["Graph","props","state","jsonData","diseaseName","this","makeGraph","proteins","drugs","d3","remove","Row","Col","id","style","width","height","className","backgroundColor","border","ref","data","prots","hasOwnProperty","console","log","nodes","links","i","protein","push","name","type","target","source","length","drug","drugName","window","innerWidth","innerHeight","svg","select","append","call","on","attr","transform","linkForce","link","simulation","force","strength","linkElements","selectAll","enter","getNodeColor","node","nodeElementsProteins","nodesList","filter","n","d","nodeElementsDiseases","getDiseases","nodeElementsDrugs","getDrugs","textElements","text","x","y","Component","Autocomplete","onChange","e","hideChart","suggestions","userInput","currentTarget","value","filteredSuggestions","suggestion","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","onClick","innerText","handler","onKeyDown","keyCode","suggestionsListComponent","Fade","in","ListGroup","class","map","index","Item","key","Form","Group","controlId","Control","placeholder","defaultProps","App","bind","disease","jsonDrugs","view","open","val","url","fetch","method","mode","cache","credentials","headers","then","res","json","prevState","diseases","preventDefault","prot","getData","Container","fluid","backgroundImage","md","xs","src","alt","paddingTop","display","justifyContent","fontFamily","textShadow","color","paddingRight","paddingLeft","Button","variant","onEnter","aria-controls","aria-expanded","Table","marginTop","fontSize","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.00892f8c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport * as d3 from 'd3'\r\nimport { Row, Col} from 'react-bootstrap';\r\n\r\nclass Graph extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            jsonData:{},\r\n            diseaseName:''\r\n        }\r\n      }\r\n\r\n      componentDidUpdate(){\r\n\r\n        this.makeGraph(this.props.jsonData, this.props.diseaseName, this.props.proteins, this.props.drugs);\r\n\r\n      }\r\n\r\n\r\n    render() {\r\n        d3.selectAll(\"svg > *\").remove();\r\n\r\n        //console.log(`data: ${this.props.proteins}`)\r\n\r\n        return (\r\n                <Row >\r\n                    <Col >\r\n                        <div  id=\"dataviz_graph\" style={{width:\"100%\",height:\"1080px\"}}>\r\n                            { <svg className = 'GraphSvg' id=\"graph\"\r\n                                style={{ backgroundColor: 'white',  height: '1080px', width: '100%',\r\n                                border: '3px solid green' }}\r\n                                    ref='canvas'>\r\n                                        <g id ='graphCart'>\r\n\r\n                                        </g>\r\n                            \r\n\r\n                            </svg> }\r\n                        </div>\r\n                      \r\n                    </Col>\r\n                </Row>\r\n   \r\n       \r\n        );\r\n    }\r\n\r\n\r\n    makeGraph(data, diseaseName, prots,drugs) {\r\n       // console.log('disease :' + diseaseName + ' prots: ' + prots)\r\n                if(data.hasOwnProperty(diseaseName)) { \r\n                    console.log('starting to paint graph...')\r\n                    let nodes = []\r\n                    let links = []\r\n                    let i = 1\r\n                    nodes.push({id:diseaseName, name:diseaseName, type:\"disease\"})\r\n                    \r\n                 \r\n                    for(var protein in prots) {\r\n                        nodes.push({id:prots[protein],name:prots[protein], type:\"protein\"})\r\n                        links.push({target:prots[protein], source:diseaseName})\r\n                        //console.log('protein: ' + prots[protein] + ' drugs: ' + drugs[prots[protein]])\r\n                        if(drugs[prots[protein]].length < 10)\r\n                        { \r\n                           for(var drug in drugs[prots[protein]]){\r\n                            let drugName = drugs[prots[protein]][drug]\r\n                            nodes.push({id:`${drugName}${i}`, name:drugName, type:'drug'})\r\n                            links.push({target: `${drugName}${i}`, source: prots[protein]})\r\n                            i++}\r\n\r\n                        }\r\n                    }\r\n                var width = window.innerWidth //window.innerWidth\r\n                var height = window.innerHeight + 400 //window.innerHeight\r\n\r\n  \r\n                var svg = d3.select(\"#dataviz_graph\").select(\"svg\")\r\n                .append(\"g\")\r\n\r\n                d3.select(\"#dataviz_graph\").call(d3.zoom().on(\"zoom\", function () {\r\n                    svg.attr(\"transform\", d3.event.transform)\r\n                 }))\r\n                  \r\n              \r\n\r\n                var linkForce = d3\r\n                .forceLink()\r\n                .id(function (link) { return link.id })\r\n\r\n                // simulation setup with all forces\r\n                var simulation = d3\r\n                .forceSimulation()\r\n                .force('charge', d3.forceManyBody().strength(-300))\r\n                .force('center', d3.forceCenter(width / 2, height / 2))\r\n                .force('link',linkForce)\r\n\r\n                var linkElements = svg.append(\"g\")\r\n                    .attr(\"class\", \"links\")\r\n                    .selectAll(\"line\")\r\n                    .data(links)\r\n                    .enter().append(\"line\")\r\n                    .attr(\"stroke-dasharray\", 3)\r\n                        .attr(\"stroke\", \"rgba(50, 50, 50, 0.4)\")\r\n\r\n                function getNodeColor(node) {\r\n                return node.type === 'disease' ? 'red' :\r\n                node.type === 'protein' ? '#1589FF' : 'green'\r\n                }\r\n\r\n                function getProteins(nodesList) {\r\n                    return nodesList.filter((n) => n.type === 'protein');\r\n                }\r\n                function getDiseases(nodesList) {\r\n                        return nodesList.filter((n) => n.type === 'disease');\r\n                }\r\n                function getDrugs(nodesList) {\r\n                    return nodesList.filter((n) => n.type === 'drug');\r\n                }\r\n                var nodeElementsProteins = svg.append(\"g\")\r\n                .attr(\"class\", \"nodes\")\r\n                .selectAll(\"circle\")\r\n                .data(getProteins(nodes))\r\n                .enter().append(\"circle\")\r\n                    .attr(\"r\", 8)\r\n                    .attr(\"fill\", getNodeColor)\r\n                    .on(\"mouseover\", function (d) {\r\n                        d3.select(this).style(\"fill\", \"yellow\")\r\n                    }).on(\"mouseout\", function (d) {\r\n                        d3.select(this).style(\"fill\", \"#1589FF\")\r\n                    })\r\n                    \r\n\r\n                var nodeElementsDiseases = svg.append(\"g\")\r\n                    .attr(\"class\", \"nodes\")\r\n                    .selectAll(\"rect\")\r\n                    .data(getDiseases(nodes))\r\n                    .enter().append(\"rect\")\r\n                    .attr(\"width\", 15)\r\n                    .attr(\"height\", 15)\r\n                    .attr(\"fill\", getNodeColor)\r\n                    .on(\"mouseover\", function (d) {\r\n                        d3.select(this).style(\"fill\", \"yellow\")\r\n                    }).on(\"mouseout\", function (d) {\r\n                        d3.select(this).style(\"fill\", \"red\")\r\n                    })\r\n\r\n                var nodeElementsDrugs = svg.append(\"g\")\r\n                    .attr(\"class\", \"nodes\")\r\n                    .selectAll(\"circle\")\r\n                    .data(getDrugs(nodes))\r\n                    .enter().append(\"circle\")\r\n                        .attr(\"r\", 6)\r\n                        .attr(\"fill\", getNodeColor)\r\n                    .on(\"mouseover\", function (d) {\r\n                        d3.select(this).style(\"fill\", \"yellow\")\r\n                    }).on(\"mouseout\", function (d) {\r\n                        d3.select(this).style(\"fill\", \"#348017\")\r\n                    })\r\n                    \r\n\r\n                var textElements = svg.append(\"g\")\r\n                .attr(\"class\", \"texts\")\r\n                .selectAll(\"text\")\r\n                .data(nodes)\r\n                .enter().append(\"text\")\r\n                    .text(function (node) { return  node.name })\r\n                    .attr(\"font-size\", 11)\r\n                    .attr(\"dx\", 15)\r\n                    .attr(\"dy\", 4)\r\n                    .attr(\"fill\", getNodeColor)\r\n                    .attr(\"font-weight\",\"bold\")\r\n\r\n\r\n                simulation.nodes(nodes).on('tick', () => {\r\n                    nodeElementsProteins\r\n                    .attr('cx', function (node) { return node.x })\r\n                    .attr('cy', function (node) { return node.y })\r\n                nodeElementsDiseases\r\n                    .attr('x', function (node) { return node.x })\r\n                    .attr('y', function (node) { return node.y })\r\n\r\n                    nodeElementsDrugs\r\n                    .attr('cx', function (node) { return node.x })\r\n                    .attr('cy', function (node) { return node.y })\r\n\r\n                    \r\n                    textElements\r\n                    .attr('x', function (node) { return node.x })\r\n                    .attr('y', function (node) { return node.y })\r\n                    linkElements\r\n                        .attr('x1', function (link) { return link.source.x })\r\n                        .attr('y1', function (link) { return link.source.y })\r\n                        .attr('x2', function (link) { return link.target.x })\r\n                        .attr('y2', function (link) { return link.target.y })\r\n                })\r\n\r\n                simulation.force('link').links(links);\r\n                }\r\n                else{\r\n                    console.log(` disease ${diseaseName} not found` )\r\n                }\r\n            }\r\n        }\r\n    \r\n\r\nexport default Graph;","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  ListGroup,\r\n\r\n  Form,\r\n  Fade\r\n\r\n} from \"react-bootstrap\";\r\n\r\nclass Autocomplete extends Component {\r\n  static propTypes = {\r\n    suggestions: PropTypes.instanceOf(Array)\r\n  };\r\n\r\n  static defaultProps = {\r\n    suggestions: []\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // The active selection's index\r\n      activeSuggestion: 0,\r\n      // The suggestions that match the user's input\r\n      filteredSuggestions: [],\r\n      // Whether or not the suggestion list is shown\r\n      showSuggestions: false,\r\n      // What the user has entered\r\n      userInput: \"\"\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.props.hideChart();\r\n    const { suggestions } = this.props;\r\n    const userInput = e.currentTarget.value;\r\n\r\n    // Filter our suggestions that don't contain the user's input\r\n    const filteredSuggestions = suggestions.filter(\r\n      (suggestion) =>\r\n        suggestion.toLowerCase().indexOf(userInput.toLowerCase()) === 0\r\n    );\r\n\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions,\r\n      showSuggestions: true,\r\n      userInput: e.currentTarget.value\r\n    });\r\n  };\r\n\r\n  onClick = (e) => {\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: e.currentTarget.innerText\r\n    });\r\n\r\n    this.props.handler(e, e.currentTarget.innerText);\r\n  };\r\n\r\n  onKeyDown = (e) => {\r\n    const { activeSuggestion, filteredSuggestions } = this.state;\r\n\r\n    // User pressed the enter key\r\n    if (e.keyCode === 13) {\r\n      this.setState({\r\n        activeSuggestion: 0,\r\n        showSuggestions: false,\r\n        userInput: filteredSuggestions[activeSuggestion]\r\n      });\r\n    }\r\n    // User pressed the up arrow\r\n    else if (e.keyCode === 38) {\r\n      if (activeSuggestion === 0) {\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n    }\r\n    // User pressed the down arrow\r\n    else if (e.keyCode === 40) {\r\n      if (activeSuggestion - 1 === filteredSuggestions.length) {\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n      state: {\r\n        activeSuggestion,\r\n        filteredSuggestions,\r\n        showSuggestions,\r\n        userInput\r\n      }\r\n    } = this;\r\n\r\n    let suggestionsListComponent;\r\n\r\n    if (showSuggestions && userInput) {\r\n      if (filteredSuggestions.length) {\r\n        suggestionsListComponent = (\r\n          <Fade in={this.state.showSuggestions}>\r\n          <ListGroup class=\"suggestions\">\r\n            {filteredSuggestions.map((suggestion, index) => {\r\n              let className;\r\n\r\n              // Flag the active suggestion with a class\r\n              if (index === activeSuggestion) {\r\n                className = \"suggestion-active\";\r\n              }\r\n\r\n              return (\r\n                <ListGroup.Item className={className} key={suggestion} onClick={onClick}>\r\n                  {suggestion}\r\n                </ListGroup.Item>\r\n              );\r\n            })}\r\n          </ListGroup>\r\n          </Fade>\r\n        );\r\n      } else {\r\n        suggestionsListComponent = (\r\n          <ListGroup class=\"no-suggestions\">\r\n            <ListGroup.Item>No suggestions, you're on your own!</ListGroup.Item>\r\n          </ListGroup>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Fragment                             \r\n      >\r\n        <Form>\r\n        <Form.Group controlId=\"formBasicDisease\">\r\n           <Form.Control type=\"text\" placeholder=\"Enter disease name (i.e COVID-19)\" \r\n            type=\"text\"\r\n            onChange={onChange}\r\n            onKeyDown={onKeyDown}\r\n            value={userInput}\r\n            \r\n          />\r\n        {suggestionsListComponent}\r\n        </Form.Group>\r\n        </Form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Autocomplete;","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Graph from \"./Graph.js\";\r\nimport Autocomplete from \"./Autocomplete.jsx\";\r\n\r\n\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css\";\r\n\r\nimport {\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Navbar,\r\n  Fade,\r\n  Table,\r\n  ListGroup,\r\n} from \"react-bootstrap\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handler = this.handler.bind(this);\r\n    this.hideChart = this.hideChart.bind(this);\r\n    this.state = {\r\n      value: \"\",\r\n      disease: \"\",\r\n      jsonData: {},\r\n      jsonDrugs: {},\r\n      drugs: [],\r\n      view: false,\r\n      open: false\r\n    };\r\n  }\r\n\r\n  hideChart() {\r\n    this.setState({\r\n      view: false,\r\n      open: false\r\n    });\r\n  }\r\n  handler(e, val) {\r\n    this.setState({\r\n      disease: val,\r\n      value: val\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"mounting APP\");\r\n    let url = \"https://api.jsonbin.io/b/5f74bd117243cd7e824742f6\";\r\n    fetch(url, {\r\n      method: \"GET\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: \"same-origin\", // include, *same-origin, omit\r\n      headers: {\r\n        \"secret-key\":\r\n          \"$2b$10$ySWzEs3S9JUHfDfnYERQc.EsFmQlIYLt5Jab9bvVm3zU6g1dvMJ8m\"\r\n      }\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState((prevState) => ({ jsonData: data }));\r\n        this.getDiseases(data);\r\n      });\r\n\r\n    url = \"https://api.jsonbin.io/b/5f762e2c7243cd7e82484f0c\";\r\n    fetch(url, {\r\n      method: \"GET\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: \"same-origin\", // include, *same-origin, omit\r\n      headers: {\r\n        \"secret-key\":\r\n          \"$2b$10$ySWzEs3S9JUHfDfnYERQc.EsFmQlIYLt5Jab9bvVm3zU6g1dvMJ8m\"\r\n      }\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState((prevState) => ({ jsonDrugs: data }));\r\n      });\r\n  }\r\n\r\n  getDiseases(data) {\r\n    var diseases = [];\r\n    for (var d in data) {\r\n      diseases.push(d);\r\n    }\r\n\r\n    this.setState((prevState) => ({\r\n      diseases: diseases\r\n    }));\r\n  }\r\n\r\n  onInput(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      value: e.target.value,\r\n      view: false,\r\n      open: false\r\n    });\r\n    console.log(\"key\");\r\n  }\r\n\r\n  getData() {\r\n    let proteins = this.state.jsonData[this.state.value];\r\n    var drugs = {};\r\n    for (var prot in proteins) {\r\n      drugs[proteins[prot]] = this.state.jsonDrugs[proteins[prot]];\r\n    }\r\n    this.setState((prevState) => ({\r\n      proteins: this.state.jsonData[this.state.value],\r\n      disease: this.state.value,\r\n      drugs: drugs\r\n    }));\r\n  }\r\n\r\n  onEnter(e) {\r\n    console.log(\"enter\");\r\n    this.getData();\r\n    e.preventDefault();\r\n    this.setState((prevState) => ({\r\n      view: true,\r\n      open: true\r\n    }));\r\n    //this.getData()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // <body\r\n      //   style={{\r\n      //     backgroundImage:\r\n      //       \"url(https://eskipaper.com/images/high-res-abstract-backgrounds-1.jpg)\",\r\n      //     backgroundRepeat: \"no-repeat\",\r\n      //     backgroundSize: \"cover\"\r\n      //   }}\r\n      // >\r\n        <Container fluid \r\n        style={ {backgroundImage: \"url(https://eskipaper.com/images/high-res-abstract-backgrounds-1.jpg)\"}}\r\n         >\r\n          {/******************* Site Header  ********************/}\r\n       \r\n\r\n          <Row  >\r\n                {/******************* LOGO  ********************/}\r\n\r\n                <Col md={3} xs={12}>\r\n                  <img\r\n                    src=\"https://upload.wikimedia.org/wikipedia/en/thumb/2/29/Ben-Gurion_University_of_the_Negev.svg/1200px-Ben-Gurion_University_of_the_Negev.svg.png\"\r\n                    alt =\"\" style={{ height:\"150px\", width: \"150px\", paddingTop:\"10px\" }}\r\n                  />\r\n                </Col>\r\n\r\n                {/******************* Header and Search Bar  ********************/}\r\n\r\n                <Col md={6} xs={12}>\r\n                 \r\n                    <h1\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        fontFamily: \"Arial Black\",\r\n                        textShadow: \"3px 6px 2px rgba(0, 0, 0, .3)\",\r\n                        color: \"white\"\r\n                      }}\r\n                    >\r\n                      Disease - Protein - Drug{\" \"}\r\n                  </h1>\r\n                      <br/>\r\n               \r\n                  <Row   className=\"justify-content-center\"     >\r\n                    <Col md={5} xs={8}\r\n                    style={{paddingRight:\"0px\"}}>\r\n \r\n                      <Autocomplete\r\n                        suggestions={this.state.diseases}\r\n                        handler={this.handler}\r\n                        hideChart={this.hideChart}\r\n                      />               \r\n                      </Col >\r\n\r\n                      <Col xs={1}\r\n                                        style={{paddingLeft:\"0px\"}}\r\n                                                >\r\n                   \r\n                      <Button\r\n                          variant=\"primary\"\r\n                          className=\"button\"\r\n                          onClick={(e) => {\r\n                            this.getData();\r\n                            this.onEnter(e);\r\n                            //  this.setState( prevState=> ({open: !this.state.open, view: true}) )\r\n                          }}\r\n                          aria-controls=\"example-fade-text\"\r\n                          aria-expanded={this.state.open}\r\n                      >\r\n                        {\" \"}\r\n                        SUBMIT <br />\r\n                      </Button>\r\n                      </Col>\r\n\r\n                   \r\n                  </Row>\r\n                </Col >\r\n                                {/******************* Legend  ********************/}\r\n\r\n                <Col xs={3}>\r\n                <Fade in={this.state.open}>\r\n\r\n                         <Table\r\n                          style={{\r\n                            marginTop:\"50px\",\r\n                            height: \"auto\",\r\n                            width:\"200px\",\r\n                            color: \"white\",\r\n                            fontSize: \"19px\",\r\n                           \r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n\r\n\r\n                            //background: \"rgba(255,255,255,0.25)\"\r\n\r\n                            // marginLeft: \"200px\",\r\n                            // marginTop:\"60px\"\r\n                          }}\r\n                        >\r\n\r\n                          {this.state.view ? \r\n                            <tbody>\r\n\r\n\r\n                              <tr>\r\n\r\n                              <span class=\"r-cl\">\r\n                                <span></span>\r\n                              </span>\r\n                                Disease<br></br>\r\n                              </tr>\r\n                              <tr>\r\n                              <span class=\"c-p-cl\">\r\n                                <span></span>\r\n                              </span>\r\n                              \r\n                                Protein<br></br>\r\n                              </tr>\r\n                              <tr>\r\n                              <span class=\"c-d-cl\">\r\n                                <span></span>\r\n                              </span>\r\n                             Drug\r\n                             </tr>\r\n                             </tbody>\r\n\r\n                           : null}\r\n\r\n                        </Table> \r\n                        </Fade>\r\n                      </Col>\r\n\r\n          </Row>\r\n\r\n          {/******************* END OF Header  ********************/}\r\n\r\n          {/*******************Graph Chart ********************/}\r\n\r\n          <Row style={{marginTop:\"20px\", width:\"100%\"}}>\r\n            <Col style={{width:\"100%\"}}>\r\n              <Fade in={this.state.open}>\r\n                <div id=\"example-fade-text\">\r\n                  {\r\n                    <Graph\r\n                      jsonData={this.state.jsonData}\r\n                      diseaseName={this.state.disease}\r\n                      proteins={this.state.proteins}\r\n                      drugs={this.state.drugs}\r\n                    />\r\n                  }\r\n                </div>\r\n              </Fade>\r\n            </Col>\r\n          </Row>\r\n\r\n\r\n          {/*******************END OF Graph Chart ********************/}\r\n        </Container>\r\n      // </body>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}